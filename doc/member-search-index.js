memberSearchIndex = [{"p":"hac.repo.room","c":"Room","l":"add(Player)","u":"add(hac.repo.player.Player)"},{"p":"hac.configurations","c":"FiltersConfig","l":"addInterceptors(InterceptorRegistry)","u":"addInterceptors(org.springframework.web.servlet.config.annotation.InterceptorRegistry)"},{"p":"hac.services","c":"RoomService","l":"addPlayerToRoom(long, Player)","u":"addPlayerToRoom(long,hac.repo.player.Player)"},{"p":"hac.configurations","c":"FiltersConfig","l":"addResourceHandlers(ResourceHandlerRegistry)","u":"addResourceHandlers(org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry)"},{"p":"hac.controllers","c":"LobbyController","l":"addRoom(int, Principal, Model)","u":"addRoom(int,java.security.Principal,org.springframework.ui.Model)"},{"p":"hac.filters","c":"FinishGameFilter","l":"afterCompletion(HttpServletRequest, HttpServletResponse, Object, Exception)","u":"afterCompletion(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)"},{"p":"hac.filters","c":"GameFilter","l":"afterCompletion(HttpServletRequest, HttpServletResponse, Object, Exception)","u":"afterCompletion(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)"},{"p":"hac.filters","c":"InRoomFilter","l":"afterCompletion(HttpServletRequest, HttpServletResponse, Object, Exception)","u":"afterCompletion(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)"},{"p":"hac.filters","c":"OnRoomFilter","l":"afterCompletion(HttpServletRequest, HttpServletResponse, Object, Exception)","u":"afterCompletion(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)"},{"p":"hac.services","c":"RoomService","l":"ALREADY_HAVE_BOARD"},{"p":"hac.repo.board","c":"Board.Options","l":"ALTERNATIVE"},{"p":"hac.classes.forGame","c":"UpdateObject","l":"attackDetails"},{"p":"hac.repo.board","c":"Board.Options","l":"BASIC"},{"p":"hac.configurations","c":"BeansConfigurations","l":"BeansConfigurations()","u":"%3Cinit%3E()"},{"p":"hac.repo.player","c":"Player","l":"board"},{"p":"hac.filters","c":"OnRoomFilter","l":"BOARD_ALREADY_SENT"},{"p":"hac.repo.board","c":"Board","l":"Board()","u":"%3Cinit%3E()"},{"p":"hac.repo.board","c":"Board","l":"Board(long, Player, List<Submarine>, List<Tile>)","u":"%3Cinit%3E(long,hac.repo.player.Player,java.util.List,java.util.List)"},{"p":"hac.classes.forGame","c":"UpdateObject","l":"boardChanges"},{"p":"hac.controllers","c":"TempForGameController","l":"boardRepository"},{"p":"hac.services","c":"RoomService","l":"boardRepository"},{"p":"hac.controllers","c":"GameController","l":"boardService"},{"p":"hac.services","c":"RoomService","l":"boardService"},{"p":"hac.services","c":"BoardService","l":"BoardService()","u":"%3Cinit%3E()"},{"p":"hac.repo.board","c":"Board","l":"boardTiles"},{"p":"hac.services","c":"RoomService","l":"checkIfBothUsersAreInSameRoom(String, String)","u":"checkIfBothUsersAreInSameRoom(java.lang.String,java.lang.String)"},{"p":"hac.services","c":"RoomService","l":"checkIfGameFinished(Room)","u":"checkIfGameFinished(hac.repo.room.Room)"},{"p":"hac.classes.forGame","c":"UserTurn","l":"col"},{"p":"hac.classes.user","c":"NewUser","l":"confirmPassword"},{"p":"hac","c":"Ex5TemplateApplicationTests","l":"contextLoads()"},{"p":"hac.classes.forGame","c":"UpdateObject","l":"convertObjectToString()"},{"p":"hac.classes.forGame","c":"UpdateObject","l":"convertStringToObject(String)","u":"convertStringToObject(java.lang.String)"},{"p":"hac.services","c":"PlayerService","l":"createNewPlayer(String)","u":"createNewPlayer(java.lang.String)"},{"p":"hac.services","c":"RoomService","l":"createNewRoom(Player, int)","u":"createNewRoom(hac.repo.player.Player,int)"},{"p":"hac.repo.room","c":"Room","l":"currentPlayerIndex"},{"p":"hac.classes.customErrors","c":"DbError","l":"DbError()","u":"%3Cinit%3E()"},{"p":"hac.classes.customErrors","c":"DbError","l":"DbError(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"hac.services","c":"BoardService","l":"DBLock"},{"p":"hac.services","c":"PlayerService","l":"DBLock"},{"p":"hac.services","c":"RoomService","l":"DBLock"},{"p":"hac.classes.customErrors","c":"DbError","l":"DEFAULT_ERROR"},{"p":"hac.repo.room","c":"Room","l":"DEFAULT_INDEX"},{"p":"hac.controllers","c":"DefaultController","l":"DefaultController()","u":"%3Cinit%3E()"},{"p":"hac.repo.tile","c":"Tile.TileStatus","l":"Empty"},{"p":"hac.controllers","c":"LobbyController","l":"enterRoom(long, Model, Principal)","u":"enterRoom(long,org.springframework.ui.Model,java.security.Principal)"},{"p":"hac.classes.forGame","c":"UserTurn","l":"ERROR_MESSAGE"},{"p":"hac","c":"Ex5TemplateApplication","l":"Ex5TemplateApplication()","u":"%3Cinit%3E()"},{"p":"hac","c":"Ex5TemplateApplicationTests","l":"Ex5TemplateApplicationTests()","u":"%3Cinit%3E()"},{"p":"hac.repo.board","c":"Board","l":"explodedSubmarine"},{"p":"hac.configurations","c":"UsersConfig","l":"filterChain(HttpSecurity)","u":"filterChain(org.springframework.security.config.annotation.web.builders.HttpSecurity)"},{"p":"hac.configurations","c":"FiltersConfig","l":"FiltersConfig()","u":"%3Cinit%3E()"},{"p":"hac.repo.player","c":"PlayerRepository","l":"findByUsername(String)","u":"findByUsername(java.lang.String)"},{"p":"hac.controllers","c":"GameController","l":"finishGame(Model, Principal)","u":"finishGame(org.springframework.ui.Model,java.security.Principal)"},{"p":"hac.filters","c":"FinishGameFilter","l":"FinishGameFilter(RoomService, PlayerService)","u":"%3Cinit%3E(hac.services.RoomService,hac.services.PlayerService)"},{"p":"hac.repo.subamrine","c":"Submarine","l":"firstCol"},{"p":"hac.repo.subamrine","c":"Submarine","l":"firstRow"},{"p":"hac.controllers","c":"LoginController","l":"forbidden()"},{"p":"hac.repo.room","c":"Room","l":"full()"},{"p":"hac.repo.room","c":"Room.RoomEnum","l":"GAME_OVER"},{"p":"hac.services","c":"RoomService","l":"GAME_OVER"},{"p":"hac.controllers","c":"GameController","l":"GameController()","u":"%3Cinit%3E()"},{"p":"hac.filters","c":"GameFilter","l":"GameFilter(RoomService, PlayerService)","u":"%3Cinit%3E(hac.services.RoomService,hac.services.PlayerService)"},{"p":"hac.controllers","c":"GameController","l":"gameInit(Model, Principal)","u":"gameInit(org.springframework.ui.Model,java.security.Principal)"},{"p":"hac.classes.customErrors","c":"GameOver","l":"GameOver(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"hac.services","c":"RoomService","l":"getAllOpponentNamesByUsername(String, boolean, boolean)","u":"getAllOpponentNamesByUsername(java.lang.String,boolean,boolean)"},{"p":"hac.services","c":"RoomService","l":"getAllRooms()"},{"p":"hac.classes.forGame","c":"UpdateObject","l":"getAttackDetails()"},{"p":"hac.repo.player","c":"Player","l":"getBoard()"},{"p":"hac.classes.forGame","c":"UpdateObject","l":"getBoardChanges()"},{"p":"hac.services","c":"RoomService","l":"getBoardOptionByUsername(String)","u":"getBoardOptionByUsername(java.lang.String)"},{"p":"hac.repo.board","c":"Board","l":"getBoardTiles()"},{"p":"hac.classes.forGame","c":"UserTurn","l":"getCol()"},{"p":"hac.classes.user","c":"NewUser","l":"getConfirmPassword()"},{"p":"hac.repo.room","c":"Room","l":"getCurrentPlayerIndex()"},{"p":"hac.controllers","c":"LobbyController","l":"getErrorLobby(Model)","u":"getErrorLobby(org.springframework.ui.Model)"},{"p":"hac.services","c":"RoomService","l":"getExecutorServiceForRoom(String)","u":"getExecutorServiceForRoom(java.lang.String)"},{"p":"hac.repo.board","c":"Board","l":"getExplodedSubmarine()"},{"p":"hac.repo.subamrine","c":"Submarine","l":"getFirstCol()"},{"p":"hac.repo.subamrine","c":"Submarine","l":"getFirstRow()"},{"p":"hac.controllers","c":"GameController","l":"getForDeniedAccess()"},{"p":"hac.repo.board","c":"Board","l":"getHitChanges(int, int)","u":"getHitChanges(int,int)"},{"p":"hac.repo.subamrine","c":"Submarine","l":"getHits()"},{"p":"hac.repo.board","c":"Board","l":"getId()"},{"p":"hac.repo.player","c":"Player","l":"getId()"},{"p":"hac.repo.room","c":"Room","l":"getId()"},{"p":"hac.repo.subamrine","c":"Submarine","l":"getId()"},{"p":"hac.repo.tile","c":"Tile","l":"getId()"},{"p":"hac.repo.room","c":"Room","l":"getInfo()"},{"p":"hac.repo.subamrine","c":"Submarine","l":"getLastCol()"},{"p":"hac.repo.subamrine","c":"Submarine","l":"getLastRow()"},{"p":"hac.repo.board","c":"Board","l":"getListAfterHit(Tile, Submarine, int, int)","u":"getListAfterHit(hac.repo.tile.Tile,hac.repo.subamrine.Submarine,int,int)"},{"p":"hac.controllers","c":"LobbyController","l":"getLobby()"},{"p":"hac.configurations","c":"BeansConfigurations","l":"getLockForAllDb()"},{"p":"hac.services","c":"BoardService","l":"getOpponentBoardsByUsername(String)","u":"getOpponentBoardsByUsername(java.lang.String)"},{"p":"hac.classes.forGame","c":"UserTurn","l":"getOpponentName()"},{"p":"hac.repo.room","c":"Room","l":"getOption()"},{"p":"hac.classes.user","c":"NewUser","l":"getPassword()"},{"p":"hac.repo.board","c":"Board","l":"getPlayer()"},{"p":"hac.services","c":"PlayerService","l":"getPlayerByUsername(String, Boolean)","u":"getPlayerByUsername(java.lang.String,java.lang.Boolean)"},{"p":"hac.repo.room","c":"Room","l":"getPlayers()"},{"p":"hac.filters","c":"FinishGameFilter","l":"getPlayerService()"},{"p":"hac.filters","c":"GameFilter","l":"getPlayerService()"},{"p":"hac.filters","c":"InRoomFilter","l":"getPlayerService()"},{"p":"hac.filters","c":"OnRoomFilter","l":"getPlayerService()"},{"p":"hac.services","c":"PlayerService","l":"getPlayerStatusByUsername(String)","u":"getPlayerStatusByUsername(java.lang.String)"},{"p":"hac.services","c":"RoomService","l":"getPlayerUsernameTurn(String, boolean, boolean)","u":"getPlayerUsernameTurn(java.lang.String,boolean,boolean)"},{"p":"hac.controllers","c":"LoginController","l":"getRegister(Model)","u":"getRegister(org.springframework.ui.Model)"},{"p":"hac.controllers","c":"LoginController","l":"getRegisterErrorMessage(String, Model)","u":"getRegisterErrorMessage(java.lang.String,org.springframework.ui.Model)"},{"p":"hac.repo.player","c":"Player","l":"getRoom()"},{"p":"hac.controllers","c":"LobbyController","l":"getRoom(Model, Principal)","u":"getRoom(org.springframework.ui.Model,java.security.Principal)"},{"p":"hac.services","c":"PlayerService","l":"getRoomByUsername(String, Boolean)","u":"getRoomByUsername(java.lang.String,java.lang.Boolean)"},{"p":"hac.controllers","c":"LobbyController","l":"getRoomCreation(Model)","u":"getRoomCreation(org.springframework.ui.Model)"},{"p":"hac.configurations","c":"BeansConfigurations","l":"getRoomExecutors()"},{"p":"hac.configurations","c":"BeansConfigurations","l":"getRoomLock()"},{"p":"hac.beans","c":"RoomLockHandler","l":"getRoomLock(Long)","u":"getRoomLock(java.lang.Long)"},{"p":"hac.configurations","c":"BeansConfigurations","l":"getRoomLocksMap()"},{"p":"hac.controllers","c":"LobbyController","l":"getRooms()"},{"p":"hac.filters","c":"FinishGameFilter","l":"getRoomService()"},{"p":"hac.filters","c":"GameFilter","l":"getRoomService()"},{"p":"hac.filters","c":"InRoomFilter","l":"getRoomService()"},{"p":"hac.filters","c":"OnRoomFilter","l":"getRoomService()"},{"p":"hac.beans","c":"RoomLockHandler","l":"getRoomsLock()"},{"p":"hac.controllers","c":"RestGameController","l":"getRoomStatus(Principal)","u":"getRoomStatus(java.security.Principal)"},{"p":"hac.services","c":"PlayerService","l":"getRoomStatusByUserName(String)","u":"getRoomStatusByUserName(java.lang.String)"},{"p":"hac.classes.forGame","c":"UserTurn","l":"getRow()"},{"p":"hac.repo.subamrine","c":"Submarine","l":"getSize()"},{"p":"hac.repo.player","c":"Player","l":"getStatus()"},{"p":"hac.repo.room","c":"Room","l":"getStatus()"},{"p":"hac.repo.tile","c":"Tile","l":"getStatus()"},{"p":"hac.repo.tile","c":"Tile","l":"getSubmarine()"},{"p":"hac.repo.board","c":"Board","l":"getSubmarines()"},{"p":"hac.services","c":"BoardService","l":"getTwoDimensionalArrayByPlayer(Player, Boolean)","u":"getTwoDimensionalArrayByPlayer(hac.repo.player.Player,java.lang.Boolean)"},{"p":"hac.repo.room","c":"Room","l":"getUpdateObjects()"},{"p":"hac.services","c":"RoomService","l":"getUpdates(String, int)","u":"getUpdates(java.lang.String,int)"},{"p":"hac.classes.user","c":"NewUser","l":"getUsername()"},{"p":"hac.repo.player","c":"Player","l":"getUsername()"},{"p":"hac.services","c":"BoardService","l":"getUserTwoDimensionalArrayBoardByUsername(String)","u":"getUserTwoDimensionalArrayBoardByUsername(java.lang.String)"},{"p":"hac.services","c":"RoomService","l":"getValidationErrorForInitGame(String, Boolean, Boolean)","u":"getValidationErrorForInitGame(java.lang.String,java.lang.Boolean,java.lang.Boolean)"},{"p":"hac.controllers","c":"GameController","l":"getWaitToStartPage()"},{"p":"hac.controllers","c":"GameController","l":"handleAllExceptions(Exception)","u":"handleAllExceptions(java.lang.Exception)"},{"p":"hac.controllers","c":"RestGameController","l":"handleAllExceptions(Exception)","u":"handleAllExceptions(java.lang.Exception)"},{"p":"hac.controllers","c":"GameController","l":"handleAllExceptions(GameOver)","u":"handleAllExceptions(hac.classes.customErrors.GameOver)"},{"p":"hac.controllers","c":"RestGameController","l":"handleAllExceptions(GameOver)","u":"handleAllExceptions(hac.classes.customErrors.GameOver)"},{"p":"hac.controllers","c":"RestGameController","l":"handleAllExceptions(InvalidChoiceError)","u":"handleAllExceptions(hac.classes.customErrors.InvalidChoiceError)"},{"p":"hac.controllers","c":"GameController","l":"handleAllExceptions(InvalidChoiceError, Model)","u":"handleAllExceptions(hac.classes.customErrors.InvalidChoiceError,org.springframework.ui.Model)"},{"p":"hac.controllers","c":"LoginController","l":"handleException(Exception, Model)","u":"handleException(java.lang.Exception,org.springframework.ui.Model)"},{"p":"hac.services","c":"RoomService","l":"handleStatusRoomPolling(Principal, DeferredResult<ResponseEntity<?>>)","u":"handleStatusRoomPolling(java.security.Principal,org.springframework.web.context.request.async.DeferredResult)"},{"p":"hac.services","c":"RoomService","l":"handleUpdatePolling(Principal, DeferredResult<ResponseEntity<?>>, int)","u":"handleUpdatePolling(java.security.Principal,org.springframework.web.context.request.async.DeferredResult,int)"},{"p":"hac.controllers","c":"RestGameController","l":"handleValidationExceptions(ConstraintViolationException)","u":"handleValidationExceptions(jakarta.validation.ConstraintViolationException)"},{"p":"hac.controllers","c":"GameController","l":"handleValidationExceptions(ConstraintViolationException, Model)","u":"handleValidationExceptions(jakarta.validation.ConstraintViolationException,org.springframework.ui.Model)"},{"p":"hac.controllers","c":"RestGameController","l":"handleValidationExceptions(MethodArgumentNotValidException)","u":"handleValidationExceptions(org.springframework.web.bind.MethodArgumentNotValidException)"},{"p":"hac.controllers","c":"GameController","l":"handleValidationExceptions(MethodArgumentNotValidException, Model)","u":"handleValidationExceptions(org.springframework.web.bind.MethodArgumentNotValidException,org.springframework.ui.Model)"},{"p":"hac.repo.tile","c":"Tile.TileStatus","l":"Hit"},{"p":"hac.repo.tile","c":"Tile","l":"HIT_ERROR"},{"p":"hac.repo.subamrine","c":"Submarine","l":"hits"},{"p":"hac.repo.subamrine","c":"Submarine","l":"hitSubmarine()"},{"p":"hac.repo.tile","c":"Tile","l":"hitTile()"},{"p":"hac.controllers","c":"DefaultController","l":"howToPlay(Model)","u":"howToPlay(org.springframework.ui.Model)"},{"p":"hac.repo.board","c":"Board","l":"id"},{"p":"hac.repo.player","c":"Player","l":"id"},{"p":"hac.repo.room","c":"Room","l":"id"},{"p":"hac.repo.subamrine","c":"Submarine","l":"id"},{"p":"hac.repo.tile","c":"Tile","l":"id"},{"p":"hac.repo.board","c":"Board","l":"imgType"},{"p":"hac.controllers","c":"DefaultController","l":"index()"},{"p":"hac.filters","c":"InRoomFilter","l":"InRoomFilter(RoomService, PlayerService)","u":"%3Cinit%3E(hac.services.RoomService,hac.services.PlayerService)"},{"p":"hac.repo.subamrine","c":"Submarine","l":"INVALID_DISPLAY"},{"p":"hac.filters","c":"OnRoomFilter","l":"INVALID_STATUS"},{"p":"hac.services","c":"RoomService","l":"INVALID_TIME_STAMP"},{"p":"hac.classes.customErrors","c":"InvalidChoiceError","l":"InvalidChoiceError(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"hac.repo.subamrine","c":"Submarine","l":"lastCol"},{"p":"hac.repo.subamrine","c":"Submarine","l":"lastRow"},{"p":"hac.controllers","c":"LobbyController","l":"LobbyController()","u":"%3Cinit%3E()"},{"p":"hac.controllers","c":"LoginController","l":"login(Model)","u":"login(org.springframework.ui.Model)"},{"p":"hac.controllers","c":"LoginController","l":"LoginController()","u":"%3Cinit%3E()"},{"p":"hac.repo.player","c":"Player.PlayerStatus","l":"LOSE"},{"p":"hac","c":"Ex5TemplateApplication","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"hac.repo.board","c":"Board","l":"makeBoard(Board.Options)","u":"makeBoard(hac.repo.board.Board.Options)"},{"p":"hac.repo.board","c":"Board","l":"makeHit(Tile, int, int)","u":"makeHit(hac.repo.tile.Tile,int,int)"},{"p":"hac.repo.subamrine","c":"Submarine","l":"MAX_INDEX_ERROR"},{"p":"hac.repo.subamrine","c":"Submarine","l":"MAX_SIZE_ERROR"},{"p":"hac.repo.subamrine","c":"Submarine","l":"MIN_INDEX_ERROR"},{"p":"hac.repo.subamrine","c":"Submarine","l":"MIN_SIZE_ERROR"},{"p":"hac.repo.tile","c":"Tile.TileStatus","l":"Miss"},{"p":"hac.classes.user","c":"NewUser","l":"NewUser()","u":"%3Cinit%3E()"},{"p":"hac.classes.user","c":"NewUser","l":"NewUser(String, String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String)"},{"p":"hac.services","c":"PlayerService","l":"NO_PLAYER"},{"p":"hac.services","c":"PlayerService","l":"NO_ROOM"},{"p":"hac.services","c":"RoomService","l":"NOT_ENOUGH_PLAYERS"},{"p":"hac.repo.player","c":"Player.PlayerStatus","l":"NOT_READY"},{"p":"hac.services","c":"RoomService","l":"NOT_USER_TURN"},{"p":"hac.repo.subamrine","c":"Submarine","l":"NULL_ERROR"},{"p":"hac.repo.player","c":"Player.PlayerStatus","l":"ON_GAME"},{"p":"hac.repo.room","c":"Room.RoomEnum","l":"ON_GAME"},{"p":"hac.controllers","c":"GameController","l":"onGamePage(Model, Principal)","u":"onGamePage(org.springframework.ui.Model,java.security.Principal)"},{"p":"hac.filters","c":"OnRoomFilter","l":"OnRoomFilter(RoomService, PlayerService)","u":"%3Cinit%3E(hac.services.RoomService,hac.services.PlayerService)"},{"p":"hac.classes.forGame","c":"UserTurn","l":"opponentName"},{"p":"hac.repo.room","c":"Room","l":"option"},{"p":"hac.repo.board","c":"Board","l":"options"},{"p":"hac.repo.board","c":"Board.Options","l":"Options()","u":"%3Cinit%3E()"},{"p":"hac.classes.user","c":"NewUser","l":"password"},{"p":"hac.controllers","c":"LoginController","l":"passwordEncoder"},{"p":"hac.configurations","c":"UsersConfig","l":"passwordEncoder()"},{"p":"hac.repo.board","c":"Board","l":"player"},{"p":"hac.services","c":"RoomService","l":"PLAYER_IN_ROOM"},{"p":"hac.repo.player","c":"Player","l":"Player()","u":"%3Cinit%3E()"},{"p":"hac.controllers","c":"TempForGameController","l":"playerRepository"},{"p":"hac.repo.room","c":"Room","l":"players"},{"p":"hac.configurations","c":"FiltersConfig","l":"playerService"},{"p":"hac.controllers","c":"GameController","l":"playerService"},{"p":"hac.controllers","c":"LobbyController","l":"playerService"},{"p":"hac.filters","c":"FinishGameFilter","l":"playerService"},{"p":"hac.filters","c":"GameFilter","l":"playerService"},{"p":"hac.filters","c":"InRoomFilter","l":"playerService"},{"p":"hac.filters","c":"OnRoomFilter","l":"playerService"},{"p":"hac.services","c":"BoardService","l":"playerService"},{"p":"hac.services","c":"RoomService","l":"playerService"},{"p":"hac.services","c":"PlayerService","l":"PlayerService()","u":"%3Cinit%3E()"},{"p":"hac.services","c":"PlayerService","l":"playersRepo"},{"p":"hac.services","c":"RoomService","l":"playersRepo"},{"p":"hac.repo.player","c":"Player.PlayerStatus","l":"PlayerStatus()","u":"%3Cinit%3E()"},{"p":"hac.controllers","c":"GameController","l":"postBoard(String, Model, Principal)","u":"postBoard(java.lang.String,org.springframework.ui.Model,java.security.Principal)"},{"p":"hac.filters","c":"FinishGameFilter","l":"postHandle(HttpServletRequest, HttpServletResponse, Object, ModelAndView)","u":"postHandle(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView)"},{"p":"hac.filters","c":"GameFilter","l":"postHandle(HttpServletRequest, HttpServletResponse, Object, ModelAndView)","u":"postHandle(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView)"},{"p":"hac.filters","c":"InRoomFilter","l":"postHandle(HttpServletRequest, HttpServletResponse, Object, ModelAndView)","u":"postHandle(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView)"},{"p":"hac.filters","c":"OnRoomFilter","l":"postHandle(HttpServletRequest, HttpServletResponse, Object, ModelAndView)","u":"postHandle(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView)"},{"p":"hac.filters","c":"FinishGameFilter","l":"preHandle(HttpServletRequest, HttpServletResponse, Object)","u":"preHandle(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,java.lang.Object)"},{"p":"hac.filters","c":"GameFilter","l":"preHandle(HttpServletRequest, HttpServletResponse, Object)","u":"preHandle(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,java.lang.Object)"},{"p":"hac.filters","c":"InRoomFilter","l":"preHandle(HttpServletRequest, HttpServletResponse, Object)","u":"preHandle(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,java.lang.Object)"},{"p":"hac.filters","c":"OnRoomFilter","l":"preHandle(HttpServletRequest, HttpServletResponse, Object)","u":"preHandle(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,java.lang.Object)"},{"p":"hac.controllers","c":"TempForGameController","l":"print()"},{"p":"hac.repo.player","c":"Player.PlayerStatus","l":"READY"},{"p":"hac.controllers","c":"LoginController","l":"registerUser(NewUser, Model)","u":"registerUser(hac.classes.user.NewUser,org.springframework.ui.Model)"},{"p":"hac.beans","c":"RoomLockHandler","l":"removeLock(Long)","u":"removeLock(java.lang.Long)"},{"p":"hac.services","c":"RoomService","l":"removePlayer(String)","u":"removePlayer(java.lang.String)"},{"p":"hac.controllers","c":"RestGameController","l":"RestGameController()","u":"%3Cinit%3E()"},{"p":"hac.repo.player","c":"Player","l":"room"},{"p":"hac.services","c":"RoomService","l":"ROOM_NOT_FOUND"},{"p":"hac.repo.room","c":"Room","l":"Room()","u":"%3Cinit%3E()"},{"p":"hac.repo.room","c":"Room.RoomEnum","l":"RoomEnum()","u":"%3Cinit%3E()"},{"p":"hac.services","c":"RoomService","l":"roomExecutors"},{"p":"hac.beans","c":"RoomLockHandler","l":"RoomLockHandler()","u":"%3Cinit%3E()"},{"p":"hac.controllers","c":"TempForGameController","l":"roomRepo"},{"p":"hac.services","c":"RoomService","l":"roomRepo"},{"p":"hac.configurations","c":"FiltersConfig","l":"roomService"},{"p":"hac.controllers","c":"GameController","l":"roomService"},{"p":"hac.controllers","c":"LobbyController","l":"roomService"},{"p":"hac.controllers","c":"RestGameController","l":"roomService"},{"p":"hac.filters","c":"FinishGameFilter","l":"roomService"},{"p":"hac.filters","c":"GameFilter","l":"roomService"},{"p":"hac.filters","c":"InRoomFilter","l":"roomService"},{"p":"hac.filters","c":"OnRoomFilter","l":"roomService"},{"p":"hac.services","c":"RoomService","l":"RoomService()","u":"%3Cinit%3E()"},{"p":"hac.beans","c":"RoomLockHandler","l":"roomsLock"},{"p":"hac.services","c":"BoardService","l":"roomsLock"},{"p":"hac.services","c":"PlayerService","l":"roomsLock"},{"p":"hac.services","c":"RoomService","l":"roomsLock"},{"p":"hac.classes.forGame","c":"UserTurn","l":"row"},{"p":"hac.services","c":"RoomService","l":"saveNewBoard(Board, String)","u":"saveNewBoard(hac.repo.board.Board,java.lang.String)"},{"p":"hac.classes.forGame","c":"UpdateObject","l":"setAttackDetails(HashMap<String, String>)","u":"setAttackDetails(java.util.HashMap)"},{"p":"hac.repo.player","c":"Player","l":"setBoard(Board)","u":"setBoard(hac.repo.board.Board)"},{"p":"hac.classes.forGame","c":"UpdateObject","l":"setBoardChanges(ArrayList<HashMap<String, String>>)","u":"setBoardChanges(java.util.ArrayList)"},{"p":"hac.repo.board","c":"Board","l":"setBoardTiles(List<Tile>)","u":"setBoardTiles(java.util.List)"},{"p":"hac.classes.forGame","c":"UserTurn","l":"setCol(int)"},{"p":"hac.classes.user","c":"NewUser","l":"setConfirmPassword(String)","u":"setConfirmPassword(java.lang.String)"},{"p":"hac.repo.room","c":"Room","l":"setCurrentPlayerIndex(int)"},{"p":"hac.services","c":"RoomService","l":"setExecutor(Long)","u":"setExecutor(java.lang.Long)"},{"p":"hac.repo.board","c":"Board","l":"setExplodedSubmarine(int)"},{"p":"hac.repo.subamrine","c":"Submarine","l":"setFirstCol(int)"},{"p":"hac.repo.subamrine","c":"Submarine","l":"setFirstRow(int)"},{"p":"hac.services","c":"RoomService","l":"setGameInitModel(Model, String)","u":"setGameInitModel(org.springframework.ui.Model,java.lang.String)"},{"p":"hac.services","c":"RoomService","l":"setGameOver(Room, String, boolean, boolean)","u":"setGameOver(hac.repo.room.Room,java.lang.String,boolean,boolean)"},{"p":"hac.repo.subamrine","c":"Submarine","l":"setHits(int)"},{"p":"hac.repo.board","c":"Board","l":"setId(long)"},{"p":"hac.repo.player","c":"Player","l":"setId(long)"},{"p":"hac.repo.room","c":"Room","l":"setId(long)"},{"p":"hac.repo.subamrine","c":"Submarine","l":"setId(long)"},{"p":"hac.repo.tile","c":"Tile","l":"setId(long)"},{"p":"hac.repo.subamrine","c":"Submarine","l":"setLastCol(int)"},{"p":"hac.repo.subamrine","c":"Submarine","l":"setLastRow(int)"},{"p":"hac.beans","c":"RoomLockHandler","l":"setNewRoomLock(Long)","u":"setNewRoomLock(java.lang.Long)"},{"p":"hac.services","c":"RoomService","l":"setOnGameModel(Model, String)","u":"setOnGameModel(org.springframework.ui.Model,java.lang.String)"},{"p":"hac.classes.forGame","c":"UserTurn","l":"setOpponentName(String)","u":"setOpponentName(java.lang.String)"},{"p":"hac.repo.room","c":"Room","l":"setOption(Board.Options)","u":"setOption(hac.repo.board.Board.Options)"},{"p":"hac.classes.user","c":"NewUser","l":"setPassword(String)","u":"setPassword(java.lang.String)"},{"p":"hac.repo.board","c":"Board","l":"setPlayer(Player)","u":"setPlayer(hac.repo.player.Player)"},{"p":"hac.repo.room","c":"Room","l":"setPlayers(List<Player>)","u":"setPlayers(java.util.List)"},{"p":"hac.filters","c":"FinishGameFilter","l":"setPlayerService(PlayerService)","u":"setPlayerService(hac.services.PlayerService)"},{"p":"hac.filters","c":"GameFilter","l":"setPlayerService(PlayerService)","u":"setPlayerService(hac.services.PlayerService)"},{"p":"hac.filters","c":"InRoomFilter","l":"setPlayerService(PlayerService)","u":"setPlayerService(hac.services.PlayerService)"},{"p":"hac.filters","c":"OnRoomFilter","l":"setPlayerService(PlayerService)","u":"setPlayerService(hac.services.PlayerService)"},{"p":"hac.repo.player","c":"Player","l":"setRoom(Room)","u":"setRoom(hac.repo.room.Room)"},{"p":"hac.filters","c":"FinishGameFilter","l":"setRoomService(RoomService)","u":"setRoomService(hac.services.RoomService)"},{"p":"hac.filters","c":"GameFilter","l":"setRoomService(RoomService)","u":"setRoomService(hac.services.RoomService)"},{"p":"hac.filters","c":"InRoomFilter","l":"setRoomService(RoomService)","u":"setRoomService(hac.services.RoomService)"},{"p":"hac.filters","c":"OnRoomFilter","l":"setRoomService(RoomService)","u":"setRoomService(hac.services.RoomService)"},{"p":"hac.beans","c":"RoomLockHandler","l":"setRoomsLock(HashMap<Long, ReentrantReadWriteLock>)","u":"setRoomsLock(java.util.HashMap)"},{"p":"hac.classes.forGame","c":"UserTurn","l":"setRow(int)"},{"p":"hac.repo.subamrine","c":"Submarine","l":"setSize(int)"},{"p":"hac.repo.player","c":"Player","l":"setStatus(Player.PlayerStatus)","u":"setStatus(hac.repo.player.Player.PlayerStatus)"},{"p":"hac.repo.room","c":"Room","l":"setStatus(Room.RoomEnum)","u":"setStatus(hac.repo.room.Room.RoomEnum)"},{"p":"hac.repo.tile","c":"Tile","l":"setStatus(Tile.TileStatus)","u":"setStatus(hac.repo.tile.Tile.TileStatus)"},{"p":"hac.repo.tile","c":"Tile","l":"setStatusWithoutChangeTheSubmarine()"},{"p":"hac.repo.tile","c":"Tile","l":"setSubmarine(Submarine)","u":"setSubmarine(hac.repo.subamrine.Submarine)"},{"p":"hac.repo.board","c":"Board","l":"setSubmarines(List<Submarine>)","u":"setSubmarines(java.util.List)"},{"p":"hac.repo.room","c":"Room","l":"setUpdateObjects(List<String>)","u":"setUpdateObjects(java.util.List)"},{"p":"hac.services","c":"RoomService","l":"setUpdates(String, UserTurn)","u":"setUpdates(java.lang.String,hac.classes.forGame.UserTurn)"},{"p":"hac.classes.user","c":"NewUser","l":"setUsername(String)","u":"setUsername(java.lang.String)"},{"p":"hac.repo.player","c":"Player","l":"setUsername(String)","u":"setUsername(java.lang.String)"},{"p":"hac.services","c":"PlayerService","l":"setWinnersInModelReturnIfNotFound(String, Model)","u":"setWinnersInModelReturnIfNotFound(java.lang.String,org.springframework.ui.Model)"},{"p":"hac.services","c":"RoomService","l":"shutdownExecutorServiceForRoom(Long)","u":"shutdownExecutorServiceForRoom(java.lang.Long)"},{"p":"hac.repo.subamrine","c":"Submarine","l":"size"},{"p":"hac.repo.board","c":"Board","l":"SIZE"},{"p":"hac.repo.room","c":"Room","l":"SIZE"},{"p":"hac.repo.player","c":"Player","l":"status"},{"p":"hac.repo.room","c":"Room","l":"status"},{"p":"hac.repo.tile","c":"Tile","l":"status"},{"p":"hac.repo.tile","c":"Tile","l":"submarine"},{"p":"hac.repo.tile","c":"Tile.TileStatus","l":"Submarine"},{"p":"hac.repo.board","c":"Board","l":"SUBMARINE_OPTION_ERROR"},{"p":"hac.repo.subamrine","c":"Submarine","l":"Submarine()","u":"%3Cinit%3E()"},{"p":"hac.repo.subamrine","c":"Submarine","l":"Submarine(long, int, int, int, int, int, int)","u":"%3Cinit%3E(long,int,int,int,int,int,int)"},{"p":"hac.controllers","c":"TempForGameController","l":"submarineRepository"},{"p":"hac.repo.board","c":"Board","l":"submarines"},{"p":"hac.controllers","c":"TempForGameController","l":"TempForGameController()","u":"%3Cinit%3E()"},{"p":"hac.controllers","c":"RestGameController","l":"test(int, Principal)","u":"test(int,java.security.Principal)"},{"p":"hac.repo.tile","c":"Tile","l":"Tile()","u":"%3Cinit%3E()"},{"p":"hac.repo.tile","c":"Tile","l":"Tile(Tile.TileStatus, Submarine)","u":"%3Cinit%3E(hac.repo.tile.Tile.TileStatus,hac.repo.subamrine.Submarine)"},{"p":"hac.controllers","c":"TempForGameController","l":"tileRepository"},{"p":"hac.repo.tile","c":"Tile.TileStatus","l":"TileStatus()","u":"%3Cinit%3E()"},{"p":"hac.repo.board","c":"Board","l":"toString()"},{"p":"hac.repo.player","c":"Player","l":"toString()"},{"p":"hac.repo.room","c":"Room","l":"toString()"},{"p":"hac.repo.subamrine","c":"Submarine","l":"toString()"},{"p":"hac.repo.tile","c":"Tile","l":"toString()"},{"p":"hac.controllers","c":"RestGameController","l":"updateBoard(UserTurn, Principal)","u":"updateBoard(hac.classes.forGame.UserTurn,java.security.Principal)"},{"p":"hac.classes.forGame","c":"UpdateObject","l":"UpdateObject()","u":"%3Cinit%3E()"},{"p":"hac.classes.forGame","c":"UpdateObject","l":"UpdateObject(HashMap<String, String>, ArrayList<HashMap<String, String>>)","u":"%3Cinit%3E(java.util.HashMap,java.util.ArrayList)"},{"p":"hac.repo.room","c":"Room","l":"updateObjects"},{"p":"hac.services","c":"RoomService","l":"updateRoomStatusByUsername(String, boolean, boolean)","u":"updateRoomStatusByUsername(java.lang.String,boolean,boolean)"},{"p":"hac.configurations","c":"UsersConfig","l":"userDetailsService(PasswordEncoder)","u":"userDetailsService(org.springframework.security.crypto.password.PasswordEncoder)"},{"p":"hac.classes.user","c":"NewUser","l":"username"},{"p":"hac.repo.player","c":"Player","l":"username"},{"p":"hac.configurations","c":"UsersConfig","l":"UsersConfig()","u":"%3Cinit%3E()"},{"p":"hac.controllers","c":"LoginController","l":"usersManager"},{"p":"hac.classes.forGame","c":"UserTurn","l":"UserTurn()","u":"%3Cinit%3E()"},{"p":"hac.classes.forGame","c":"UserTurn","l":"UserTurn(int, int, String)","u":"%3Cinit%3E(int,int,java.lang.String)"},{"p":"hac.classes.user","c":"NewUser","l":"validate()"},{"p":"hac.services","c":"RoomService","l":"validateGameMode(Room)","u":"validateGameMode(hac.repo.room.Room)"},{"p":"hac.classes.forGame","c":"UserTurn","l":"validateIndex(int)"},{"p":"hac.services","c":"RoomService","l":"validatePlayerInRoomStatus(String)","u":"validatePlayerInRoomStatus(java.lang.String)"},{"p":"hac.services","c":"RoomService","l":"validatePlayersOnGame(Room)","u":"validatePlayersOnGame(hac.repo.room.Room)"},{"p":"hac.repo.subamrine","c":"Submarine","l":"validateSubmarine()"},{"p":"hac.services","c":"RoomService","l":"validateTurn(String)","u":"validateTurn(java.lang.String)"},{"p":"hac.repo.board","c":"Board.Options","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"hac.repo.player","c":"Player.PlayerStatus","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"hac.repo.room","c":"Room.RoomEnum","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"hac.repo.tile","c":"Tile.TileStatus","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"hac.repo.board","c":"Board.Options","l":"values()"},{"p":"hac.repo.player","c":"Player.PlayerStatus","l":"values()"},{"p":"hac.repo.room","c":"Room.RoomEnum","l":"values()"},{"p":"hac.repo.tile","c":"Tile.TileStatus","l":"values()"},{"p":"hac.controllers","c":"LobbyController","l":"wait(Model)","u":"wait(org.springframework.ui.Model)"},{"p":"hac.repo.room","c":"Room.RoomEnum","l":"WAITING_FOR_BOARDS"},{"p":"hac.repo.room","c":"Room.RoomEnum","l":"WAITING_FOR_NEW_PLAYER"},{"p":"hac.repo.player","c":"Player.PlayerStatus","l":"WIN"}];updateSearchResults();